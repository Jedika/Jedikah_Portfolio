// app global css in SCSS form
:root {
  --text-multiplier: 1;
  --text-display: block;
  --color-primary: $primary;
}
// fonts
@font-face {
  font-family: PlayfairDisplay;
  src: url(./fonts/PlayfairDisplay.ttf);
}
// h1,
// h2,
// h3 {
//   font-family: 'PlayfairDisplay', 'serif';
// }

* {
  box-sizing: border-box;
  padding: 0px;
  margin: 0px;
  text-decoration: none !important;
  list-style: none !important;
  outline: none !important;
}

// responsive text

@media only screen and (max-width: 480px) {
  :root {
    --text-multiplier: 1.2;
    --text-display: none;
  }
}
@media only screen and (min-width: 481px) and (max-width: 767px) {
  :root {
    --text-multiplier: 1.4;
  }
}
@media only screen and (min-width: 768px) and (max-width: 1125px) {
  :root {
    --text-multiplier: 1.5;
  }
}

@media only screen and (min-width: 1126px) {
  :root {
    --text-multiplier: 1.6;
  }
}

@media only screen and (min-width: 1600px) {
  :root {
    --text-multiplier: 1.7;
  }
}

.text-display {
  display: var(--text-display);
}

/* Declare text styles using calc() function and the multiplier */
h1 {
  font-size: calc(32px * var(--text-multiplier));
  line-height: calc(48px * var(--text-multiplier));
  font-family: 'PlayfairDisplay', 'serif';
}
h2 {
  font-size: calc(20px * var(--text-multiplier));
  line-height: calc(30px * var(--text-multiplier));
  font-family: 'PlayfairDisplay', 'serif';
}
h3 {
  font-size: calc(12px * var(--text-multiplier));
  line-height: calc(18px * var(--text-multiplier));
  font-family: 'PlayfairDisplay', 'serif';
}

h4 {
  font-size: calc(12px * var(--text-multiplier));
  line-height: calc(18px * var(--text-multiplier));
  font-family: 'PlayfairDisplay', 'serif';
}

h5 {
  font-size: calc(12px * var(--text-multiplier));
  line-height: calc(18px * var(--text-multiplier));
  font-family: 'PlayfairDisplay', 'serif';
}

h6 {
  font-size: calc(12px * var(--text-multiplier));
  line-height: calc(18px * var(--text-multiplier));
}

p {
  font-size: calc(10px * var(--text-multiplier));
  line-height: calc(10px * var(--text-multiplier));
}
q {
  font-size: calc(10px * var(--text-multiplier));
  line-height: calc(10px * var(--text-multiplier));
  text-align: justify;
}
div {
  font-size: calc(10px * var(--text-multiplier));
  line-height: calc(12px * var(--text-multiplier));
}

.underline {
  border-bottom: 2px solid $primary;
}

h1,
h2,
h3,
h4,
h5,
h6,
.h1,
.h2,
.h3,
.h4,
.h5,
.h6 {
  margin-top: 0;
  margin-bottom: 0;
}
html {
  scroll-behavior: smooth;
}

*::-webkit-scrollbar-track {
  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
  background-color: #202122;
}

*::-webkit-scrollbar {
  width: 1vh;
  height: 0.6vh;
  background-color: transparent;
}

*::-webkit-scrollbar-thumb {
  background-color: $primary;
  border-radius: 20px;
  // background-image: -webkit-linear-gradient(
  //   45deg,
  //   rgba(255, 255, 255, 0.2) 25%,
  //   transparent 25%,
  //   transparent 50%,
  //   rgba(255, 255, 255, 0.2) 50%,
  //   rgba(255, 255, 255, 0.2) 75%,
  //   transparent 75%,
  //   transparent
  // );
}

.typewrite-effect {
  display: inline-block;

  div {
    overflow: hidden;
    border-bottom: 0.15em solid $primary;
    white-space: nowrap;
    font-size: 1.6rem;
    width: 0;
    height: 30px;
    line-height: 30px;
    animation: typing 4s steps(20, end) infinite;
    position: relative;
    left: 70px;
    top: -25px;
    padding-right: 5px;
  }
  div::after {
    content: '|';
    animation: blink 1s steps(1, end) infinite;
    position: absolute;
    right: -2px;
  }

  @keyframes typing {
    0%,
    100% {
      width: 0;
      display: none;
    }
    35%,
    65% {
      width: 100%;
    }
  }

  @keyframes blink {
    0%,
    100% {
      opacity: 0;
    }
    50% {
      opacity: 1;
    }
  }
}
